// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  id String @unique
  email String @unique
  role String
  name String
  last_name String?
  gender String?
  address String?
  status String?
  password String
  phonenumer String?
  token String?
  // pcuser Pcuser[]
  @@map("users")
}

model Pcuser{
  id Int @id @default(autoincrement())

  userId    String @unique
  firstname String
  lastname  String
  description String
  gender String?
  phonenumber String?
  image   String
  brand  String
  serialnumber String? @unique
  endYear DateTime?
  status String? // 'active', 'trashed', 'deleted'
  pcowner String?
  barcode String?
  createdAT DateTime @default(now())
  updatedAT DateTime @updatedAt
  deactivatedAt DateTime?
  // user_Id Int  
  // user Users @relation(fields: [user_Id], references: [id])

  @@map("pcuser")
}

model Recent{
  id Int @id @default(autoincrement())

  userId    String
  createdAT DateTime @default(now())
  @@map("recent")
}

model Inactive{
  id Int @id @default(autoincrement())

  userId    String @unique
  firstname String
  lastname  String
  description String
  gender String?
  phonenumber String?
  image   String
  brand  String
  serialnumber String?
  endYear DateTime?
  status String? // 'active', 'trashed', 'deleted'
  pcowner String?
  barcode String?
  createdAT DateTime @default(now())
  updatedAT DateTime @updatedAt
  deactivatedAt DateTime?
  // user_Id Int  
  // user Users @relation(fields: [user_Id], references: [id])

  @@map("inactive")
}
// model Staff {

//   id Int @id @default(autoincrement())
//   userId    String @unique
//   pcowner String
//   @@map("staff")
// }

model Reset {
  id Int @id @default(autoincrement())
  userId String
  shortcode String
  createdAT    DateTime   @default(now())
  expiresAt    DateTime 
}